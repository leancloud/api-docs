<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LeanCloud-dotNet-SDK: LeanCloud.AVQueryPair&lt; S, T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LeanCloud-dotNet-SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_lean_cloud.htm">LeanCloud</a></li><li class="navelem"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">AVQueryPair</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="class_lean_cloud_1_1_a_v_query_pair-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">LeanCloud.AVQueryPair&lt; S, T &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6c6dae36eec93e55a74eaad15335a3fb"><td class="memItemLeft" align="right" valign="top">abstract S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a6c6dae36eec93e55a74eaad15335a3fb">CreateInstance</a> (IDictionary&lt; string, object &gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a34dae50f05dd7122e8f9beb11d68983c">where</a>=null, IEnumerable&lt; string &gt; replacementOrderBy=null, IEnumerable&lt; string &gt; thenBy=null, int? <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#abba751a1824c950b203048f0f9f23a70">skip</a>=null, int? <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ae5138a4c44c8ff7e7cf2c3d073853412">limit</a>=null, IEnumerable&lt; string &gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a0bccf309fe4bd66f40cf9dd79c4d135b">includes</a>=null, IEnumerable&lt; string &gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#aad5aece99d6a99d7fc32f766322bfdd6">selectedKeys</a>=null, String <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a392e9444df1de6eede968af4a34061bc">redirectClassNameForKey</a>=null)</td></tr>
<tr class="separator:a6c6dae36eec93e55a74eaad15335a3fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a9db4e164cfb78d1ccc54ce06e6fa55"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a1a9db4e164cfb78d1ccc54ce06e6fa55">AVQueryPair</a> (string <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#aa8654b091fc016235fe00d378370cf41">className</a>)</td></tr>
<tr class="separator:a1a9db4e164cfb78d1ccc54ce06e6fa55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a2566d0d8738b047d64d7b70017751"><td class="memItemLeft" align="right" valign="top">virtual IDictionary&lt; string, object &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a66a2566d0d8738b047d64d7b70017751">MergeWhere</a> (IDictionary&lt; string, object &gt; primary, IDictionary&lt; string, object &gt; secondary)</td></tr>
<tr class="separator:a66a2566d0d8738b047d64d7b70017751"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32a72eccdb01d8e3f3d7416387df81b5"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a32a72eccdb01d8e3f3d7416387df81b5">OrderBy</a> (string key)</td></tr>
<tr class="memdesc:a32a72eccdb01d8e3f3d7416387df81b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sorts the results in ascending order by the given key. This will override any existing ordering for the query.  <a href="#a32a72eccdb01d8e3f3d7416387df81b5">More...</a><br /></td></tr>
<tr class="separator:a32a72eccdb01d8e3f3d7416387df81b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4c34144e324ef25ad93b0fea1ee21e1"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ad4c34144e324ef25ad93b0fea1ee21e1">OrderByDescending</a> (string key)</td></tr>
<tr class="memdesc:ad4c34144e324ef25ad93b0fea1ee21e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sorts the results in descending order by the given key. This will override any existing ordering for the query.  <a href="#ad4c34144e324ef25ad93b0fea1ee21e1">More...</a><br /></td></tr>
<tr class="separator:ad4c34144e324ef25ad93b0fea1ee21e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8091cebd42d9cc41f15224b9aa6d0530"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a8091cebd42d9cc41f15224b9aa6d0530">ThenBy</a> (string key)</td></tr>
<tr class="memdesc:a8091cebd42d9cc41f15224b9aa6d0530"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sorts the results in ascending order by the given key, after previous ordering has been applied.  <a href="#a8091cebd42d9cc41f15224b9aa6d0530">More...</a><br /></td></tr>
<tr class="separator:a8091cebd42d9cc41f15224b9aa6d0530"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8a477a5f8b2759802a208e5513f69fa"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ad8a477a5f8b2759802a208e5513f69fa">ThenByDescending</a> (string key)</td></tr>
<tr class="memdesc:ad8a477a5f8b2759802a208e5513f69fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sorts the results in descending order by the given key, after previous ordering has been applied.  <a href="#ad8a477a5f8b2759802a208e5513f69fa">More...</a><br /></td></tr>
<tr class="separator:ad8a477a5f8b2759802a208e5513f69fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac747ae96e73c3d6f59dd91d0571cadee"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ac747ae96e73c3d6f59dd91d0571cadee">Include</a> (string key)</td></tr>
<tr class="memdesc:ac747ae96e73c3d6f59dd91d0571cadee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Include nested AVObjects for the provided key. You can use dot notation to specify which fields in the included objects should also be fetched.  <a href="#ac747ae96e73c3d6f59dd91d0571cadee">More...</a><br /></td></tr>
<tr class="separator:ac747ae96e73c3d6f59dd91d0571cadee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50552d3ad3171aaae96431c20022047e"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a50552d3ad3171aaae96431c20022047e">Select</a> (string key)</td></tr>
<tr class="memdesc:a50552d3ad3171aaae96431c20022047e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restrict the fields of returned AVObjects to only include the provided key. If this is called multiple times, then all of the keys specified in each of the calls will be included.  <a href="#a50552d3ad3171aaae96431c20022047e">More...</a><br /></td></tr>
<tr class="separator:a50552d3ad3171aaae96431c20022047e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b971baf1df131c24eaafc51af333b28"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a0b971baf1df131c24eaafc51af333b28">Skip</a> (int count)</td></tr>
<tr class="memdesc:a0b971baf1df131c24eaafc51af333b28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Skips a number of results before returning. This is useful for pagination of large queries. Chaining multiple skips together will cause more results to be skipped.  <a href="#a0b971baf1df131c24eaafc51af333b28">More...</a><br /></td></tr>
<tr class="separator:a0b971baf1df131c24eaafc51af333b28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e51eb877b39b6bbd0db1b409af7b81a"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a0e51eb877b39b6bbd0db1b409af7b81a">Limit</a> (int count)</td></tr>
<tr class="memdesc:a0e51eb877b39b6bbd0db1b409af7b81a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Controls the maximum number of results that are returned. Setting a negative limit denotes retrieval without a limit. Chaining multiple limits results in the last limit specified being used. The default limit is 100, with a maximum of 1000 results being returned at a time.  <a href="#a0e51eb877b39b6bbd0db1b409af7b81a">More...</a><br /></td></tr>
<tr class="separator:a0e51eb877b39b6bbd0db1b409af7b81a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8b63600ab3785ec350d53f950f7443a"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ab8b63600ab3785ec350d53f950f7443a">WhereContainedIn&lt; TIn &gt;</a> (string key, IEnumerable&lt; TIn &gt; values)</td></tr>
<tr class="memdesc:ab8b63600ab3785ec350d53f950f7443a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value to be contained in the provided list of values.  <a href="#ab8b63600ab3785ec350d53f950f7443a">More...</a><br /></td></tr>
<tr class="separator:ab8b63600ab3785ec350d53f950f7443a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea61ebcc6f70a92ec7aa1722a4b62758"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#aea61ebcc6f70a92ec7aa1722a4b62758">WhereContainsAll&lt; TIn &gt;</a> (string key, IEnumerable&lt; TIn &gt; values)</td></tr>
<tr class="memdesc:aea61ebcc6f70a92ec7aa1722a4b62758"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a constraint to the querey that requires a particular key's value to be a list containing all of the elements in the provided list of values.  <a href="#aea61ebcc6f70a92ec7aa1722a4b62758">More...</a><br /></td></tr>
<tr class="separator:aea61ebcc6f70a92ec7aa1722a4b62758"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d14a073b04a32d93faab6e3f0dba8b2"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a5d14a073b04a32d93faab6e3f0dba8b2">WhereContains</a> (string key, string substring)</td></tr>
<tr class="memdesc:a5d14a073b04a32d93faab6e3f0dba8b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint for finding string values that contain a provided string. This will be slow for large data sets.  <a href="#a5d14a073b04a32d93faab6e3f0dba8b2">More...</a><br /></td></tr>
<tr class="separator:a5d14a073b04a32d93faab6e3f0dba8b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a283612279d0d162bf1495b3cb5454818"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a283612279d0d162bf1495b3cb5454818">WhereDoesNotExist</a> (string key)</td></tr>
<tr class="memdesc:a283612279d0d162bf1495b3cb5454818"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint for finding objects that do not contain a given key.  <a href="#a283612279d0d162bf1495b3cb5454818">More...</a><br /></td></tr>
<tr class="separator:a283612279d0d162bf1495b3cb5454818"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72e3575c46aa62900e320062f348b313"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a72e3575c46aa62900e320062f348b313">WhereDoesNotMatchQuery&lt; TOther &gt;</a> (string key, <a class="el" href="class_lean_cloud_1_1_a_v_query.htm">AVQuery</a>&lt; TOther &gt; query)</td></tr>
<tr class="memdesc:a72e3575c46aa62900e320062f348b313"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires that a particular key's value does not match another <a class="el" href="class_lean_cloud_1_1_a_v_query.htm" title="The AVQuery class defines a query that is used to fetch AVObjects. The most common use case is findin...">AVQuery</a>. This only works on keys whose values are AVObjects or lists of AVObjects.  <a href="#a72e3575c46aa62900e320062f348b313">More...</a><br /></td></tr>
<tr class="separator:a72e3575c46aa62900e320062f348b313"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a743066d385e7078f1884f7aa23f44551"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a743066d385e7078f1884f7aa23f44551">WhereEndsWith</a> (string key, string suffix)</td></tr>
<tr class="memdesc:a743066d385e7078f1884f7aa23f44551"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint for finding string values that end with a provided string. This will be slow for large data sets.  <a href="#a743066d385e7078f1884f7aa23f44551">More...</a><br /></td></tr>
<tr class="separator:a743066d385e7078f1884f7aa23f44551"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dc63ff6721de60adeaab2d4efaca062"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a8dc63ff6721de60adeaab2d4efaca062">WhereEqualTo</a> (string key, object value)</td></tr>
<tr class="memdesc:a8dc63ff6721de60adeaab2d4efaca062"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value to be equal to the provided value.  <a href="#a8dc63ff6721de60adeaab2d4efaca062">More...</a><br /></td></tr>
<tr class="separator:a8dc63ff6721de60adeaab2d4efaca062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af71282d4c800c0ae438e1ebeb94dbb47"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#af71282d4c800c0ae438e1ebeb94dbb47">WhereSizeEqualTo</a> (string key, uint size)</td></tr>
<tr class="memdesc:af71282d4c800c0ae438e1ebeb94dbb47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's size to be equal to the provided size.  <a href="#af71282d4c800c0ae438e1ebeb94dbb47">More...</a><br /></td></tr>
<tr class="separator:af71282d4c800c0ae438e1ebeb94dbb47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a272cf25d0b1a928e59e46660832db0a1"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a272cf25d0b1a928e59e46660832db0a1">WhereExists</a> (string key)</td></tr>
<tr class="memdesc:a272cf25d0b1a928e59e46660832db0a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint for finding objects that contain a given key.  <a href="#a272cf25d0b1a928e59e46660832db0a1">More...</a><br /></td></tr>
<tr class="separator:a272cf25d0b1a928e59e46660832db0a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a222e2cc366491e9aac9ea452b6d6fdfd"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a222e2cc366491e9aac9ea452b6d6fdfd">WhereGreaterThan</a> (string key, object value)</td></tr>
<tr class="memdesc:a222e2cc366491e9aac9ea452b6d6fdfd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value to be greater than the provided value.  <a href="#a222e2cc366491e9aac9ea452b6d6fdfd">More...</a><br /></td></tr>
<tr class="separator:a222e2cc366491e9aac9ea452b6d6fdfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac47a3a33b00887929a754c1972f5025d"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ac47a3a33b00887929a754c1972f5025d">WhereGreaterThanOrEqualTo</a> (string key, object value)</td></tr>
<tr class="memdesc:ac47a3a33b00887929a754c1972f5025d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value to be greater or equal to than the provided value.  <a href="#ac47a3a33b00887929a754c1972f5025d">More...</a><br /></td></tr>
<tr class="separator:ac47a3a33b00887929a754c1972f5025d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7248ab9a413beff4a08c1dc7679d3406"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a7248ab9a413beff4a08c1dc7679d3406">WhereLessThan</a> (string key, object value)</td></tr>
<tr class="memdesc:a7248ab9a413beff4a08c1dc7679d3406"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value to be less than the provided value.  <a href="#a7248ab9a413beff4a08c1dc7679d3406">More...</a><br /></td></tr>
<tr class="separator:a7248ab9a413beff4a08c1dc7679d3406"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a372b5b9b3bb649eb8bbc33b5e6703bda"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a372b5b9b3bb649eb8bbc33b5e6703bda">WhereLessThanOrEqualTo</a> (string key, object value)</td></tr>
<tr class="memdesc:a372b5b9b3bb649eb8bbc33b5e6703bda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value to be less than or equal to the provided value.  <a href="#a372b5b9b3bb649eb8bbc33b5e6703bda">More...</a><br /></td></tr>
<tr class="separator:a372b5b9b3bb649eb8bbc33b5e6703bda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55b9259d633f6ea98b7cb15ce244dc7d"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a55b9259d633f6ea98b7cb15ce244dc7d">WhereMatches</a> (string key, Regex regex, string modifiers)</td></tr>
<tr class="memdesc:a55b9259d633f6ea98b7cb15ce244dc7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a regular expression constraint for finding string values that match the provided regular expression. This may be slow for large data sets.  <a href="#a55b9259d633f6ea98b7cb15ce244dc7d">More...</a><br /></td></tr>
<tr class="separator:a55b9259d633f6ea98b7cb15ce244dc7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5d79861896e89e532ec3d5a3157ceb4"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#af5d79861896e89e532ec3d5a3157ceb4">WhereMatches</a> (string key, Regex regex)</td></tr>
<tr class="memdesc:af5d79861896e89e532ec3d5a3157ceb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a regular expression constraint for finding string values that match the provided regular expression. This may be slow for large data sets.  <a href="#af5d79861896e89e532ec3d5a3157ceb4">More...</a><br /></td></tr>
<tr class="separator:af5d79861896e89e532ec3d5a3157ceb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2b4e0e37b205f4ac1212d62c9147be3"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#af2b4e0e37b205f4ac1212d62c9147be3">WhereMatches</a> (string key, string pattern, string modifiers=null)</td></tr>
<tr class="memdesc:af2b4e0e37b205f4ac1212d62c9147be3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a regular expression constraint for finding string values that match the provided regular expression. This may be slow for large data sets.  <a href="#af2b4e0e37b205f4ac1212d62c9147be3">More...</a><br /></td></tr>
<tr class="separator:af2b4e0e37b205f4ac1212d62c9147be3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5016b8cc20126f92b2b4562347ba9b95"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a5016b8cc20126f92b2b4562347ba9b95">WhereMatches</a> (string key, string pattern)</td></tr>
<tr class="memdesc:a5016b8cc20126f92b2b4562347ba9b95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a regular expression constraint for finding string values that match the provided regular expression. This may be slow for large data sets.  <a href="#a5016b8cc20126f92b2b4562347ba9b95">More...</a><br /></td></tr>
<tr class="separator:a5016b8cc20126f92b2b4562347ba9b95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84e8a988008e5dc605fe98ff7c202e64"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a84e8a988008e5dc605fe98ff7c202e64">WhereMatchesKeyInQuery&lt; TOther &gt;</a> (string key, string keyInQuery, <a class="el" href="class_lean_cloud_1_1_a_v_query.htm">AVQuery</a>&lt; TOther &gt; query)</td></tr>
<tr class="memdesc:a84e8a988008e5dc605fe98ff7c202e64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value to match a value for a key in the results of another <a class="el" href="class_lean_cloud_1_1_a_v_query.htm" title="The AVQuery class defines a query that is used to fetch AVObjects. The most common use case is findin...">AVQuery</a>.  <a href="#a84e8a988008e5dc605fe98ff7c202e64">More...</a><br /></td></tr>
<tr class="separator:a84e8a988008e5dc605fe98ff7c202e64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ff2f34cefd7f069d7643ed2752df8f9"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a4ff2f34cefd7f069d7643ed2752df8f9">WhereDoesNotMatchesKeyInQuery&lt; TOther &gt;</a> (string key, string keyInQuery, <a class="el" href="class_lean_cloud_1_1_a_v_query.htm">AVQuery</a>&lt; TOther &gt; query)</td></tr>
<tr class="memdesc:a4ff2f34cefd7f069d7643ed2752df8f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value does not match any value for a key in the results of another <a class="el" href="class_lean_cloud_1_1_a_v_query.htm" title="The AVQuery class defines a query that is used to fetch AVObjects. The most common use case is findin...">AVQuery</a>.  <a href="#a4ff2f34cefd7f069d7643ed2752df8f9">More...</a><br /></td></tr>
<tr class="separator:a4ff2f34cefd7f069d7643ed2752df8f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8b0d66d597b479e9cb654b64e0c7655"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ac8b0d66d597b479e9cb654b64e0c7655">WhereMatchesQuery&lt; TOther &gt;</a> (string key, <a class="el" href="class_lean_cloud_1_1_a_v_query.htm">AVQuery</a>&lt; TOther &gt; query)</td></tr>
<tr class="memdesc:ac8b0d66d597b479e9cb654b64e0c7655"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires that a particular key's value matches another <a class="el" href="class_lean_cloud_1_1_a_v_query.htm" title="The AVQuery class defines a query that is used to fetch AVObjects. The most common use case is findin...">AVQuery</a>. This only works on keys whose values are AVObjects or lists of AVObjects.  <a href="#ac8b0d66d597b479e9cb654b64e0c7655">More...</a><br /></td></tr>
<tr class="separator:ac8b0d66d597b479e9cb654b64e0c7655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa904606baace94859c3574b2487cec6e"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#aa904606baace94859c3574b2487cec6e">WhereNear</a> (string key, <a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm">AVGeoPoint</a> point)</td></tr>
<tr class="memdesc:aa904606baace94859c3574b2487cec6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a proximity-based constraint for finding objects with keys whose GeoPoint values are near the given point.  <a href="#aa904606baace94859c3574b2487cec6e">More...</a><br /></td></tr>
<tr class="separator:aa904606baace94859c3574b2487cec6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a349efff75b8dae36a7edb899b4f86dab"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a349efff75b8dae36a7edb899b4f86dab">WhereNotContainedIn&lt; TIn &gt;</a> (string key, IEnumerable&lt; TIn &gt; values)</td></tr>
<tr class="memdesc:a349efff75b8dae36a7edb899b4f86dab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value to be contained in the provided list of values.  <a href="#a349efff75b8dae36a7edb899b4f86dab">More...</a><br /></td></tr>
<tr class="separator:a349efff75b8dae36a7edb899b4f86dab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a188396e1b7e92f4920afb2705aaf1fce"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a188396e1b7e92f4920afb2705aaf1fce">WhereNotEqualTo</a> (string key, object value)</td></tr>
<tr class="memdesc:a188396e1b7e92f4920afb2705aaf1fce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the query that requires a particular key's value not to be equal to the provided value.  <a href="#a188396e1b7e92f4920afb2705aaf1fce">More...</a><br /></td></tr>
<tr class="separator:a188396e1b7e92f4920afb2705aaf1fce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdb26ba09d6e250968b6529634cc90c0"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#afdb26ba09d6e250968b6529634cc90c0">WhereStartsWith</a> (string key, string suffix)</td></tr>
<tr class="memdesc:afdb26ba09d6e250968b6529634cc90c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint for finding string values that start with the provided string. This query will use the backend index, so it will be fast even with large data sets.  <a href="#afdb26ba09d6e250968b6529634cc90c0">More...</a><br /></td></tr>
<tr class="separator:afdb26ba09d6e250968b6529634cc90c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fba3a28ce0c829f551cc577cc083db0"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a8fba3a28ce0c829f551cc577cc083db0">WhereWithinGeoBox</a> (string key, <a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm">AVGeoPoint</a> southwest, <a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm">AVGeoPoint</a> northeast)</td></tr>
<tr class="memdesc:a8fba3a28ce0c829f551cc577cc083db0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a constraint to the query that requires a particular key's coordinates to be contained within a given rectangular geographic bounding box.  <a href="#a8fba3a28ce0c829f551cc577cc083db0">More...</a><br /></td></tr>
<tr class="separator:a8fba3a28ce0c829f551cc577cc083db0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4821e1f9303e3e920f8759012f9d84"><td class="memItemLeft" align="right" valign="top">virtual S&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a9c4821e1f9303e3e920f8759012f9d84">WhereWithinDistance</a> (string key, <a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm">AVGeoPoint</a> point, <a class="el" href="struct_lean_cloud_1_1_a_v_geo_distance.htm">AVGeoDistance</a> maxDistance)</td></tr>
<tr class="memdesc:a9c4821e1f9303e3e920f8759012f9d84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a proximity-based constraint for finding objects with keys whose GeoPoint values are near the given point and within the maximum distance given.  <a href="#a9c4821e1f9303e3e920f8759012f9d84">More...</a><br /></td></tr>
<tr class="separator:a9c4821e1f9303e3e920f8759012f9d84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a788c7e2d05148094c878ba6bbf188eeb"><td class="memItemLeft" align="right" valign="top">virtual Task&lt; IEnumerable&lt; T &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a788c7e2d05148094c878ba6bbf188eeb">FindAsync</a> ()</td></tr>
<tr class="memdesc:a788c7e2d05148094c878ba6bbf188eeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a list of AVObjects that satisfy this query from <a class="el" href="namespace_lean_cloud.htm">LeanCloud</a>.  <a href="#a788c7e2d05148094c878ba6bbf188eeb">More...</a><br /></td></tr>
<tr class="separator:a788c7e2d05148094c878ba6bbf188eeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5116f65fed21d9dd5fd2e9c61a188812"><td class="memItemLeft" align="right" valign="top">abstract Task&lt; IEnumerable&lt; T &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a5116f65fed21d9dd5fd2e9c61a188812">FindAsync</a> (CancellationToken cancellationToken)</td></tr>
<tr class="memdesc:a5116f65fed21d9dd5fd2e9c61a188812"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a list of AVObjects that satisfy this query from <a class="el" href="namespace_lean_cloud.htm">LeanCloud</a>.  <a href="#a5116f65fed21d9dd5fd2e9c61a188812">More...</a><br /></td></tr>
<tr class="separator:a5116f65fed21d9dd5fd2e9c61a188812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5eb53cb746df8dabfd2945c814bc847"><td class="memItemLeft" align="right" valign="top">virtual Task&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ab5eb53cb746df8dabfd2945c814bc847">FirstOrDefaultAsync</a> ()</td></tr>
<tr class="memdesc:ab5eb53cb746df8dabfd2945c814bc847"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves at most one <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query.  <a href="#ab5eb53cb746df8dabfd2945c814bc847">More...</a><br /></td></tr>
<tr class="separator:ab5eb53cb746df8dabfd2945c814bc847"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b87d0f31a196c55e01fe9818215469a"><td class="memItemLeft" align="right" valign="top">abstract Task&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a3b87d0f31a196c55e01fe9818215469a">FirstOrDefaultAsync</a> (CancellationToken cancellationToken)</td></tr>
<tr class="memdesc:a3b87d0f31a196c55e01fe9818215469a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves at most one <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query.  <a href="#a3b87d0f31a196c55e01fe9818215469a">More...</a><br /></td></tr>
<tr class="separator:a3b87d0f31a196c55e01fe9818215469a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbea2c8f60ae8f684aa378d5f2172946"><td class="memItemLeft" align="right" valign="top">virtual Task&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#abbea2c8f60ae8f684aa378d5f2172946">FirstAsync</a> ()</td></tr>
<tr class="memdesc:abbea2c8f60ae8f684aa378d5f2172946"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves at most one <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query.  <a href="#abbea2c8f60ae8f684aa378d5f2172946">More...</a><br /></td></tr>
<tr class="separator:abbea2c8f60ae8f684aa378d5f2172946"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05205919a3ddeff2f165c5814ec3dfe1"><td class="memItemLeft" align="right" valign="top">abstract Task&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a05205919a3ddeff2f165c5814ec3dfe1">FirstAsync</a> (CancellationToken cancellationToken)</td></tr>
<tr class="memdesc:a05205919a3ddeff2f165c5814ec3dfe1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves at most one <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query.  <a href="#a05205919a3ddeff2f165c5814ec3dfe1">More...</a><br /></td></tr>
<tr class="separator:a05205919a3ddeff2f165c5814ec3dfe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adedcde0dbd3c0572124f0a7a330d9d5f"><td class="memItemLeft" align="right" valign="top">virtual Task&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#adedcde0dbd3c0572124f0a7a330d9d5f">CountAsync</a> ()</td></tr>
<tr class="memdesc:adedcde0dbd3c0572124f0a7a330d9d5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Counts the number of objects that match this query.  <a href="#adedcde0dbd3c0572124f0a7a330d9d5f">More...</a><br /></td></tr>
<tr class="separator:adedcde0dbd3c0572124f0a7a330d9d5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeb0adff3fda7079c0ff65598a1a1d11"><td class="memItemLeft" align="right" valign="top">abstract Task&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#afeb0adff3fda7079c0ff65598a1a1d11">CountAsync</a> (CancellationToken cancellationToken)</td></tr>
<tr class="memdesc:afeb0adff3fda7079c0ff65598a1a1d11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Counts the number of objects that match this query.  <a href="#afeb0adff3fda7079c0ff65598a1a1d11">More...</a><br /></td></tr>
<tr class="separator:afeb0adff3fda7079c0ff65598a1a1d11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b0c27d138c68d33b81c5c4deeaea717"><td class="memItemLeft" align="right" valign="top">virtual Task&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a0b0c27d138c68d33b81c5c4deeaea717">GetAsync</a> (string objectId)</td></tr>
<tr class="memdesc:a0b0c27d138c68d33b81c5c4deeaea717"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> whose id is already known by fetching data from the server.  <a href="#a0b0c27d138c68d33b81c5c4deeaea717">More...</a><br /></td></tr>
<tr class="separator:a0b0c27d138c68d33b81c5c4deeaea717"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a648f0e54db3e485d309de434fddc4be7"><td class="memItemLeft" align="right" valign="top">abstract Task&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a648f0e54db3e485d309de434fddc4be7">GetAsync</a> (string objectId, CancellationToken cancellationToken)</td></tr>
<tr class="memdesc:a648f0e54db3e485d309de434fddc4be7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> whose id is already known by fetching data from the server.  <a href="#a648f0e54db3e485d309de434fddc4be7">More...</a><br /></td></tr>
<tr class="separator:a648f0e54db3e485d309de434fddc4be7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab2bd3756f536c20f8a85da5af260d61"><td class="memItemLeft" align="right" valign="top">IDictionary&lt; string, object &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#aab2bd3756f536c20f8a85da5af260d61">BuildParameters</a> (bool includeClassName=false)</td></tr>
<tr class="memdesc:aab2bd3756f536c20f8a85da5af260d61"><td class="mdescLeft">&#160;</td><td class="mdescRight">构建查询字符串  <a href="#aab2bd3756f536c20f8a85da5af260d61">More...</a><br /></td></tr>
<tr class="separator:aab2bd3756f536c20f8a85da5af260d61"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1d9f59339f284ac21081183b8b65b651"><td class="memItemLeft" align="right" valign="top">static Q&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a1d9f59339f284ac21081183b8b65b651">Or&lt; Q, O &gt;</a> (IEnumerable&lt; Q &gt; queries)</td></tr>
<tr class="memdesc:a1d9f59339f284ac21081183b8b65b651"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a query that is the or of the given queries.  <a href="#a1d9f59339f284ac21081183b8b65b651">More...</a><br /></td></tr>
<tr class="separator:a1d9f59339f284ac21081183b8b65b651"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a9daba25e39146c21931f699e7d5c0ae3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a9daba25e39146c21931f699e7d5c0ae3">AVQueryPair</a> ()</td></tr>
<tr class="separator:a9daba25e39146c21931f699e7d5c0ae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade3fe30258c58e639ceb4a41b45bffe2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ade3fe30258c58e639ceb4a41b45bffe2">AVQueryPair</a> (<a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">AVQueryPair</a>&lt; S, T &gt; source, IDictionary&lt; string, object &gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a34dae50f05dd7122e8f9beb11d68983c">where</a>=null, IEnumerable&lt; string &gt; replacementOrderBy=null, IEnumerable&lt; string &gt; thenBy=null, int? <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#abba751a1824c950b203048f0f9f23a70">skip</a>=null, int? <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ae5138a4c44c8ff7e7cf2c3d073853412">limit</a>=null, IEnumerable&lt; string &gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a0bccf309fe4bd66f40cf9dd79c4d135b">includes</a>=null, IEnumerable&lt; string &gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#aad5aece99d6a99d7fc32f766322bfdd6">selectedKeys</a>=null, String <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a392e9444df1de6eede968af4a34061bc">redirectClassNameForKey</a>=null)</td></tr>
<tr class="memdesc:ade3fe30258c58e639ceb4a41b45bffe2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Private constructor for composition of queries. A Source query is required, but the remaining values can be null if they won't be changed in this composition.  <a href="#ade3fe30258c58e639ceb4a41b45bffe2">More...</a><br /></td></tr>
<tr class="separator:ade3fe30258c58e639ceb4a41b45bffe2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aa8654b091fc016235fe00d378370cf41"><td class="memItemLeft" align="right" valign="top">readonly string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#aa8654b091fc016235fe00d378370cf41">className</a></td></tr>
<tr class="separator:aa8654b091fc016235fe00d378370cf41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34dae50f05dd7122e8f9beb11d68983c"><td class="memItemLeft" align="right" valign="top">readonly Dictionary&lt; string, object &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a34dae50f05dd7122e8f9beb11d68983c">where</a></td></tr>
<tr class="separator:a34dae50f05dd7122e8f9beb11d68983c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac965d070af97af19a8b1aecf14fee830"><td class="memItemLeft" align="right" valign="top">readonly ReadOnlyCollection&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ac965d070af97af19a8b1aecf14fee830">orderBy</a></td></tr>
<tr class="separator:ac965d070af97af19a8b1aecf14fee830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bccf309fe4bd66f40cf9dd79c4d135b"><td class="memItemLeft" align="right" valign="top">readonly ReadOnlyCollection&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a0bccf309fe4bd66f40cf9dd79c4d135b">includes</a></td></tr>
<tr class="separator:a0bccf309fe4bd66f40cf9dd79c4d135b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad5aece99d6a99d7fc32f766322bfdd6"><td class="memItemLeft" align="right" valign="top">readonly ReadOnlyCollection&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#aad5aece99d6a99d7fc32f766322bfdd6">selectedKeys</a></td></tr>
<tr class="separator:aad5aece99d6a99d7fc32f766322bfdd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a392e9444df1de6eede968af4a34061bc"><td class="memItemLeft" align="right" valign="top">readonly String&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a392e9444df1de6eede968af4a34061bc">redirectClassNameForKey</a></td></tr>
<tr class="separator:a392e9444df1de6eede968af4a34061bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abba751a1824c950b203048f0f9f23a70"><td class="memItemLeft" align="right" valign="top">readonly? int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#abba751a1824c950b203048f0f9f23a70">skip</a></td></tr>
<tr class="separator:abba751a1824c950b203048f0f9f23a70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5138a4c44c8ff7e7cf2c3d073853412"><td class="memItemLeft" align="right" valign="top">readonly? int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ae5138a4c44c8ff7e7cf2c3d073853412">limit</a></td></tr>
<tr class="separator:ae5138a4c44c8ff7e7cf2c3d073853412"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:a0821c1fa642b2b08196c15c056ab259b"><td class="memItemLeft" align="right" valign="top">Dictionary&lt; string, object &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a0821c1fa642b2b08196c15c056ab259b">Condition</a><code> [get]</code></td></tr>
<tr class="separator:a0821c1fa642b2b08196c15c056ab259b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9daba25e39146c21931f699e7d5c0ae3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9daba25e39146c21931f699e7d5c0ae3">&#9670;&nbsp;</a></span>AVQueryPair() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.<a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">AVQueryPair</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ade3fe30258c58e639ceb4a41b45bffe2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade3fe30258c58e639ceb4a41b45bffe2">&#9670;&nbsp;</a></span>AVQueryPair() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.<a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">AVQueryPair</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">AVQueryPair</a>&lt; S, T &gt;&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>where</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; string &gt;&#160;</td>
          <td class="paramname"><em>replacementOrderBy</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; string &gt;&#160;</td>
          <td class="paramname"><em>thenBy</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int?&#160;</td>
          <td class="paramname"><em>skip</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int?&#160;</td>
          <td class="paramname"><em>limit</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; string &gt;&#160;</td>
          <td class="paramname"><em>includes</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; string &gt;&#160;</td>
          <td class="paramname"><em>selectedKeys</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">String&#160;</td>
          <td class="paramname"><em>redirectClassNameForKey</em> = <code>null</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Private constructor for composition of queries. A Source query is required, but the remaining values can be null if they won't be changed in this composition. </p>

</div>
</div>
<a id="a1a9db4e164cfb78d1ccc54ce06e6fa55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a9db4e164cfb78d1ccc54ce06e6fa55">&#9670;&nbsp;</a></span>AVQueryPair() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.<a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">AVQueryPair</a> </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>className</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aab2bd3756f536c20f8a85da5af260d61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab2bd3756f536c20f8a85da5af260d61">&#9670;&nbsp;</a></span>BuildParameters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">IDictionary&lt;string, object&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.BuildParameters </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>includeClassName</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>构建查询字符串 </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">includeClassName</td><td>是否包含 ClassName </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

</div>
</div>
<a id="adedcde0dbd3c0572124f0a7a330d9d5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adedcde0dbd3c0572124f0a7a330d9d5f">&#9670;&nbsp;</a></span>CountAsync() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Task&lt;int&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.CountAsync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Counts the number of objects that match this query. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of objects that match this query.</dd></dl>

</div>
</div>
<a id="afeb0adff3fda7079c0ff65598a1a1d11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afeb0adff3fda7079c0ff65598a1a1d11">&#9670;&nbsp;</a></span>CountAsync() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract Task&lt;int&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.CountAsync </td>
          <td>(</td>
          <td class="paramtype">CancellationToken&#160;</td>
          <td class="paramname"><em>cancellationToken</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Counts the number of objects that match this query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cancellationToken</td><td>The cancellation token.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of objects that match this query.</dd></dl>

<p>Implemented in <a class="el" href="class_lean_cloud_1_1_a_v_query.htm#a6e8fd56a1b81c6241c409a08d63bd9ab">LeanCloud.AVQuery&lt; T &gt;</a>, and <a class="el" href="class_lean_cloud_1_1_realtime_1_1_a_v_i_m_conversation_query.htm#a7b53987e70b83bb6cd0f5c12364ca70b">LeanCloud.Realtime.AVIMConversationQuery</a>.</p>

</div>
</div>
<a id="a6c6dae36eec93e55a74eaad15335a3fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c6dae36eec93e55a74eaad15335a3fb">&#9670;&nbsp;</a></span>CreateInstance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.CreateInstance </td>
          <td>(</td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>where</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; string &gt;&#160;</td>
          <td class="paramname"><em>replacementOrderBy</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; string &gt;&#160;</td>
          <td class="paramname"><em>thenBy</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int?&#160;</td>
          <td class="paramname"><em>skip</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int?&#160;</td>
          <td class="paramname"><em>limit</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; string &gt;&#160;</td>
          <td class="paramname"><em>includes</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; string &gt;&#160;</td>
          <td class="paramname"><em>selectedKeys</em> = <code>null</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">String&#160;</td>
          <td class="paramname"><em>redirectClassNameForKey</em> = <code>null</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="class_lean_cloud_1_1_a_v_query.htm#ab27d44abfce7baf2f49bf7992cba7e3f">LeanCloud.AVQuery&lt; T &gt;</a>, and <a class="el" href="class_lean_cloud_1_1_realtime_1_1_a_v_i_m_conversation_query.htm#a65eb411bc89da97f945852d43878951b">LeanCloud.Realtime.AVIMConversationQuery</a>.</p>

</div>
</div>
<a id="a788c7e2d05148094c878ba6bbf188eeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a788c7e2d05148094c878ba6bbf188eeb">&#9670;&nbsp;</a></span>FindAsync() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Task&lt;IEnumerable&lt;T&gt; &gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.FindAsync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a list of AVObjects that satisfy this query from <a class="el" href="namespace_lean_cloud.htm">LeanCloud</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>The list of AVObjects that match this query.</dd></dl>

</div>
</div>
<a id="a5116f65fed21d9dd5fd2e9c61a188812"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5116f65fed21d9dd5fd2e9c61a188812">&#9670;&nbsp;</a></span>FindAsync() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract Task&lt;IEnumerable&lt;T&gt; &gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.FindAsync </td>
          <td>(</td>
          <td class="paramtype">CancellationToken&#160;</td>
          <td class="paramname"><em>cancellationToken</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a list of AVObjects that satisfy this query from <a class="el" href="namespace_lean_cloud.htm">LeanCloud</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cancellationToken</td><td>The cancellation token.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The list of AVObjects that match this query.</dd></dl>

<p>Implemented in <a class="el" href="class_lean_cloud_1_1_a_v_query.htm#acd12f91056901c6cf5116e9a55632f40">LeanCloud.AVQuery&lt; T &gt;</a>, and <a class="el" href="class_lean_cloud_1_1_realtime_1_1_a_v_i_m_conversation_query.htm#ad472b788b630e7cf0a1d579e4505549c">LeanCloud.Realtime.AVIMConversationQuery</a>.</p>

</div>
</div>
<a id="abbea2c8f60ae8f684aa378d5f2172946"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbea2c8f60ae8f684aa378d5f2172946">&#9670;&nbsp;</a></span>FirstAsync() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Task&lt;T&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.FirstAsync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves at most one <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query. </p>
<dl class="section return"><dt>Returns</dt><dd>A single <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query.</dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="class_lean_cloud_1_1_a_v_exception.htm" title="Exceptions that may occur when sending requests to LeanCloud.">AVException</a></td><td>If no results match the query.</td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a05205919a3ddeff2f165c5814ec3dfe1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05205919a3ddeff2f165c5814ec3dfe1">&#9670;&nbsp;</a></span>FirstAsync() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract Task&lt;T&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.FirstAsync </td>
          <td>(</td>
          <td class="paramtype">CancellationToken&#160;</td>
          <td class="paramname"><em>cancellationToken</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves at most one <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cancellationToken</td><td>The cancellation token.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A single <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query.</dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="class_lean_cloud_1_1_a_v_exception.htm" title="Exceptions that may occur when sending requests to LeanCloud.">AVException</a></td><td>If no results match the query.</td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="class_lean_cloud_1_1_a_v_query.htm#a11c240ea5137e5a25e4fbb97dda6dbd5">LeanCloud.AVQuery&lt; T &gt;</a>, and <a class="el" href="class_lean_cloud_1_1_realtime_1_1_a_v_i_m_conversation_query.htm#a5037363f30e9cf3fb61a62079f6c2cd7">LeanCloud.Realtime.AVIMConversationQuery</a>.</p>

</div>
</div>
<a id="ab5eb53cb746df8dabfd2945c814bc847"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5eb53cb746df8dabfd2945c814bc847">&#9670;&nbsp;</a></span>FirstOrDefaultAsync() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Task&lt;T&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.FirstOrDefaultAsync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves at most one <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query. </p>
<dl class="section return"><dt>Returns</dt><dd>A single <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query, or else null.</dd></dl>

</div>
</div>
<a id="a3b87d0f31a196c55e01fe9818215469a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b87d0f31a196c55e01fe9818215469a">&#9670;&nbsp;</a></span>FirstOrDefaultAsync() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract Task&lt;T&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.FirstOrDefaultAsync </td>
          <td>(</td>
          <td class="paramtype">CancellationToken&#160;</td>
          <td class="paramname"><em>cancellationToken</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves at most one <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cancellationToken</td><td>The cancellation token.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A single <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> that satisfies this query, or else null.</dd></dl>

<p>Implemented in <a class="el" href="class_lean_cloud_1_1_a_v_query.htm#a76c892fdd45b613a585138dd2b42594a">LeanCloud.AVQuery&lt; T &gt;</a>, and <a class="el" href="class_lean_cloud_1_1_realtime_1_1_a_v_i_m_conversation_query.htm#acf9c773c7ade75508ecab88b85d962a2">LeanCloud.Realtime.AVIMConversationQuery</a>.</p>

</div>
</div>
<a id="a0b0c27d138c68d33b81c5c4deeaea717"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b0c27d138c68d33b81c5c4deeaea717">&#9670;&nbsp;</a></span>GetAsync() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Task&lt;T&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.GetAsync </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>objectId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs a <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> whose id is already known by fetching data from the server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">objectId</td><td>ObjectId of the <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> to fetch.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> for the given objectId.</dd></dl>

</div>
</div>
<a id="a648f0e54db3e485d309de434fddc4be7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a648f0e54db3e485d309de434fddc4be7">&#9670;&nbsp;</a></span>GetAsync() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract Task&lt;T&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.GetAsync </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>objectId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">CancellationToken&#160;</td>
          <td class="paramname"><em>cancellationToken</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs a <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> whose id is already known by fetching data from the server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">objectId</td><td>ObjectId of the <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> to fetch.</td></tr>
    <tr><td class="paramname">cancellationToken</td><td>The cancellation token.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> for the given objectId.</dd></dl>

<p>Implemented in <a class="el" href="class_lean_cloud_1_1_a_v_query.htm#aacd8907006560c9dd9d7af386e29e65a">LeanCloud.AVQuery&lt; T &gt;</a>, and <a class="el" href="class_lean_cloud_1_1_realtime_1_1_a_v_i_m_conversation_query.htm#ac725c9e005ff74d93536889abd5d9960">LeanCloud.Realtime.AVIMConversationQuery</a>.</p>

</div>
</div>
<a id="ac747ae96e73c3d6f59dd91d0571cadee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac747ae96e73c3d6f59dd91d0571cadee">&#9670;&nbsp;</a></span>Include()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.Include </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Include nested AVObjects for the provided key. You can use dot notation to specify which fields in the included objects should also be fetched. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that should be included.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a0e51eb877b39b6bbd0db1b409af7b81a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e51eb877b39b6bbd0db1b409af7b81a">&#9670;&nbsp;</a></span>Limit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.Limit </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Controls the maximum number of results that are returned. Setting a negative limit denotes retrieval without a limit. Chaining multiple limits results in the last limit specified being used. The default limit is 100, with a maximum of 1000 results being returned at a time. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>The maximum number of results to return.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a66a2566d0d8738b047d64d7b70017751"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66a2566d0d8738b047d64d7b70017751">&#9670;&nbsp;</a></span>MergeWhere()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual IDictionary&lt;string, object&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.MergeWhere </td>
          <td>(</td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>primary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>secondary</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1d9f59339f284ac21081183b8b65b651"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d9f59339f284ac21081183b8b65b651">&#9670;&nbsp;</a></span>Or&lt; Q, O &gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Q <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.Or&lt; Q, O &gt; </td>
          <td>(</td>
          <td class="paramtype">IEnumerable&lt; Q &gt;&#160;</td>
          <td class="paramname"><em>queries</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs a query that is the or of the given queries. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queries</td><td>The list of AVQueries to 'or' together.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A AVQquery that is the 'or' of the passed in queries.</dd></dl>
<div class="typeconstraint">
<dl><dt><b>Type Constraints</b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em>Q</em></td><td>&#160;:</td><td valign="top"><em>AVQueryBase&lt;O&gt;</em></td><td>&#160;</td></tr>
<tr><td valign="top"><em>O</em></td><td>&#160;:</td><td valign="top"><em>IAVObject</em></td><td>&#160;</td></tr>
</table>
</dd>
</dl>
</div>

</div>
</div>
<a id="a32a72eccdb01d8e3f3d7416387df81b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32a72eccdb01d8e3f3d7416387df81b5">&#9670;&nbsp;</a></span>OrderBy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.OrderBy </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sorts the results in ascending order by the given key. This will override any existing ordering for the query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to order by.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="ad4c34144e324ef25ad93b0fea1ee21e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4c34144e324ef25ad93b0fea1ee21e1">&#9670;&nbsp;</a></span>OrderByDescending()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.OrderByDescending </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sorts the results in descending order by the given key. This will override any existing ordering for the query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to order by.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a50552d3ad3171aaae96431c20022047e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50552d3ad3171aaae96431c20022047e">&#9670;&nbsp;</a></span>Select()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.Select </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restrict the fields of returned AVObjects to only include the provided key. If this is called multiple times, then all of the keys specified in each of the calls will be included. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that should be included.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a0b971baf1df131c24eaafc51af333b28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b971baf1df131c24eaafc51af333b28">&#9670;&nbsp;</a></span>Skip()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.Skip </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Skips a number of results before returning. This is useful for pagination of large queries. Chaining multiple skips together will cause more results to be skipped. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>The number of results to skip.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a8091cebd42d9cc41f15224b9aa6d0530"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8091cebd42d9cc41f15224b9aa6d0530">&#9670;&nbsp;</a></span>ThenBy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.ThenBy </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sorts the results in ascending order by the given key, after previous ordering has been applied. </p>
<p>This method can only be called if there is already an <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a32a72eccdb01d8e3f3d7416387df81b5" title="Sorts the results in ascending order by the given key. This will override any existing ordering for t...">OrderBy</a> or <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ad4c34144e324ef25ad93b0fea1ee21e1" title="Sorts the results in descending order by the given key. This will override any existing ordering for ...">OrderByDescending</a> on this query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to order by.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="ad8a477a5f8b2759802a208e5513f69fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8a477a5f8b2759802a208e5513f69fa">&#9670;&nbsp;</a></span>ThenByDescending()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.ThenByDescending </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sorts the results in descending order by the given key, after previous ordering has been applied. </p>
<p>This method can only be called if there is already an <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#a32a72eccdb01d8e3f3d7416387df81b5" title="Sorts the results in ascending order by the given key. This will override any existing ordering for t...">OrderBy</a> or <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm#ad4c34144e324ef25ad93b0fea1ee21e1" title="Sorts the results in descending order by the given key. This will override any existing ordering for ...">OrderByDescending</a> on this query. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to order by.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="ab8b63600ab3785ec350d53f950f7443a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8b63600ab3785ec350d53f950f7443a">&#9670;&nbsp;</a></span>WhereContainedIn&lt; TIn &gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereContainedIn&lt; TIn &gt; </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; TIn &gt;&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value to be contained in the provided list of values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">values</td><td>The values that will match.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a5d14a073b04a32d93faab6e3f0dba8b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d14a073b04a32d93faab6e3f0dba8b2">&#9670;&nbsp;</a></span>WhereContains()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereContains </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>substring</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint for finding string values that contain a provided string. This will be slow for large data sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the string to match is stored in.</td></tr>
    <tr><td class="paramname">substring</td><td>The substring that the value must contain.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="aea61ebcc6f70a92ec7aa1722a4b62758"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea61ebcc6f70a92ec7aa1722a4b62758">&#9670;&nbsp;</a></span>WhereContainsAll&lt; TIn &gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereContainsAll&lt; TIn &gt; </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; TIn &gt;&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add a constraint to the querey that requires a particular key's value to be a list containing all of the elements in the provided list of values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">values</td><td>The values that will match.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a283612279d0d162bf1495b3cb5454818"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a283612279d0d162bf1495b3cb5454818">&#9670;&nbsp;</a></span>WhereDoesNotExist()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereDoesNotExist </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint for finding objects that do not contain a given key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that should not exist.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a4ff2f34cefd7f069d7643ed2752df8f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ff2f34cefd7f069d7643ed2752df8f9">&#9670;&nbsp;</a></span>WhereDoesNotMatchesKeyInQuery&lt; TOther &gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereDoesNotMatchesKeyInQuery&lt; TOther &gt; </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>keyInQuery</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_lean_cloud_1_1_a_v_query.htm">AVQuery</a>&lt; TOther &gt;&#160;</td>
          <td class="paramname"><em>query</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value does not match any value for a key in the results of another <a class="el" href="class_lean_cloud_1_1_a_v_query.htm" title="The AVQuery class defines a query that is used to fetch AVObjects. The most common use case is findin...">AVQuery</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key whose value is being checked.</td></tr>
    <tr><td class="paramname">keyInQuery</td><td>The key in the objects from the subquery to look in.</td></tr>
    <tr><td class="paramname">query</td><td>The subquery to run</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>
<div class="typeconstraint">
<dl><dt><b>Type Constraints</b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em>TOther</em></td><td>&#160;:</td><td valign="top"><em>AVObject</em></td><td>&#160;</td></tr>
</table>
</dd>
</dl>
</div>

</div>
</div>
<a id="a72e3575c46aa62900e320062f348b313"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72e3575c46aa62900e320062f348b313">&#9670;&nbsp;</a></span>WhereDoesNotMatchQuery&lt; TOther &gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereDoesNotMatchQuery&lt; TOther &gt; </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_lean_cloud_1_1_a_v_query.htm">AVQuery</a>&lt; TOther &gt;&#160;</td>
          <td class="paramname"><em>query</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires that a particular key's value does not match another <a class="el" href="class_lean_cloud_1_1_a_v_query.htm" title="The AVQuery class defines a query that is used to fetch AVObjects. The most common use case is findin...">AVQuery</a>. This only works on keys whose values are AVObjects or lists of AVObjects. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">query</td><td>The query that the value should not match.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>
<div class="typeconstraint">
<dl><dt><b>Type Constraints</b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em>TOther</em></td><td>&#160;:</td><td valign="top"><em>AVObject</em></td><td>&#160;</td></tr>
</table>
</dd>
</dl>
</div>

</div>
</div>
<a id="a743066d385e7078f1884f7aa23f44551"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a743066d385e7078f1884f7aa23f44551">&#9670;&nbsp;</a></span>WhereEndsWith()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereEndsWith </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>suffix</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint for finding string values that end with a provided string. This will be slow for large data sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the string to match is stored in.</td></tr>
    <tr><td class="paramname">suffix</td><td>The substring that the value must end with.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a8dc63ff6721de60adeaab2d4efaca062"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dc63ff6721de60adeaab2d4efaca062">&#9670;&nbsp;</a></span>WhereEqualTo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereEqualTo </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value to be equal to the provided value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">value</td><td>The value that the <a class="el" href="class_lean_cloud_1_1_a_v_object.htm" title="The AVObject is a local representation of data that can be saved and retrieved from the LeanCloud clo...">AVObject</a> must contain.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a272cf25d0b1a928e59e46660832db0a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a272cf25d0b1a928e59e46660832db0a1">&#9670;&nbsp;</a></span>WhereExists()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereExists </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint for finding objects that contain a given key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that should exist.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a222e2cc366491e9aac9ea452b6d6fdfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a222e2cc366491e9aac9ea452b6d6fdfd">&#9670;&nbsp;</a></span>WhereGreaterThan()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereGreaterThan </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value to be greater than the provided value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">value</td><td>The value that provides a lower bound.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="ac47a3a33b00887929a754c1972f5025d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac47a3a33b00887929a754c1972f5025d">&#9670;&nbsp;</a></span>WhereGreaterThanOrEqualTo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereGreaterThanOrEqualTo </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value to be greater or equal to than the provided value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">value</td><td>The value that provides a lower bound.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a7248ab9a413beff4a08c1dc7679d3406"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7248ab9a413beff4a08c1dc7679d3406">&#9670;&nbsp;</a></span>WhereLessThan()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereLessThan </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value to be less than the provided value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">value</td><td>The value that provides an upper bound.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a372b5b9b3bb649eb8bbc33b5e6703bda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a372b5b9b3bb649eb8bbc33b5e6703bda">&#9670;&nbsp;</a></span>WhereLessThanOrEqualTo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereLessThanOrEqualTo </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value to be less than or equal to the provided value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">value</td><td>The value that provides a lower bound.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a55b9259d633f6ea98b7cb15ce244dc7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55b9259d633f6ea98b7cb15ce244dc7d">&#9670;&nbsp;</a></span>WhereMatches() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereMatches </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Regex&#160;</td>
          <td class="paramname"><em>regex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>modifiers</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a regular expression constraint for finding string values that match the provided regular expression. This may be slow for large data sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the string to match is stored in.</td></tr>
    <tr><td class="paramname">regex</td><td>The regular expression pattern to match. The Regex must have the RegexOptions.ECMAScript options flag set.</td></tr>
    <tr><td class="paramname">modifiers</td><td>Any of the following supported PCRE modifiers: <div class="fragment"><div class="line">i</div></div><!-- fragment --> - Case insensitive search <div class="fragment"><div class="line">m</div></div><!-- fragment --> Search across multiple lines of input</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="af5d79861896e89e532ec3d5a3157ceb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5d79861896e89e532ec3d5a3157ceb4">&#9670;&nbsp;</a></span>WhereMatches() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereMatches </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Regex&#160;</td>
          <td class="paramname"><em>regex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a regular expression constraint for finding string values that match the provided regular expression. This may be slow for large data sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the string to match is stored in.</td></tr>
    <tr><td class="paramname">regex</td><td>The regular expression pattern to match. The Regex must have the RegexOptions.ECMAScript options flag set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="af2b4e0e37b205f4ac1212d62c9147be3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2b4e0e37b205f4ac1212d62c9147be3">&#9670;&nbsp;</a></span>WhereMatches() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereMatches </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>pattern</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>modifiers</em> = <code>null</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a regular expression constraint for finding string values that match the provided regular expression. This may be slow for large data sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the string to match is stored in.</td></tr>
    <tr><td class="paramname">pattern</td><td>The PCRE regular expression pattern to match.</td></tr>
    <tr><td class="paramname">modifiers</td><td>Any of the following supported PCRE modifiers: <div class="fragment"><div class="line">i</div></div><!-- fragment --> - Case insensitive search <div class="fragment"><div class="line">m</div></div><!-- fragment --> Search across multiple lines of input</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a5016b8cc20126f92b2b4562347ba9b95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5016b8cc20126f92b2b4562347ba9b95">&#9670;&nbsp;</a></span>WhereMatches() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereMatches </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>pattern</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a regular expression constraint for finding string values that match the provided regular expression. This may be slow for large data sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the string to match is stored in.</td></tr>
    <tr><td class="paramname">pattern</td><td>The PCRE regular expression pattern to match.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a84e8a988008e5dc605fe98ff7c202e64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84e8a988008e5dc605fe98ff7c202e64">&#9670;&nbsp;</a></span>WhereMatchesKeyInQuery&lt; TOther &gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereMatchesKeyInQuery&lt; TOther &gt; </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>keyInQuery</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_lean_cloud_1_1_a_v_query.htm">AVQuery</a>&lt; TOther &gt;&#160;</td>
          <td class="paramname"><em>query</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value to match a value for a key in the results of another <a class="el" href="class_lean_cloud_1_1_a_v_query.htm" title="The AVQuery class defines a query that is used to fetch AVObjects. The most common use case is findin...">AVQuery</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key whose value is being checked.</td></tr>
    <tr><td class="paramname">keyInQuery</td><td>The key in the objects from the subquery to look in.</td></tr>
    <tr><td class="paramname">query</td><td>The subquery to run</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>
<div class="typeconstraint">
<dl><dt><b>Type Constraints</b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em>TOther</em></td><td>&#160;:</td><td valign="top"><em>AVObject</em></td><td>&#160;</td></tr>
</table>
</dd>
</dl>
</div>

</div>
</div>
<a id="ac8b0d66d597b479e9cb654b64e0c7655"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8b0d66d597b479e9cb654b64e0c7655">&#9670;&nbsp;</a></span>WhereMatchesQuery&lt; TOther &gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereMatchesQuery&lt; TOther &gt; </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_lean_cloud_1_1_a_v_query.htm">AVQuery</a>&lt; TOther &gt;&#160;</td>
          <td class="paramname"><em>query</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires that a particular key's value matches another <a class="el" href="class_lean_cloud_1_1_a_v_query.htm" title="The AVQuery class defines a query that is used to fetch AVObjects. The most common use case is findin...">AVQuery</a>. This only works on keys whose values are AVObjects or lists of AVObjects. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">query</td><td>The query that the value should match.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>
<div class="typeconstraint">
<dl><dt><b>Type Constraints</b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em>TOther</em></td><td>&#160;:</td><td valign="top"><em>AVObject</em></td><td>&#160;</td></tr>
</table>
</dd>
</dl>
</div>

</div>
</div>
<a id="aa904606baace94859c3574b2487cec6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa904606baace94859c3574b2487cec6e">&#9670;&nbsp;</a></span>WhereNear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereNear </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm">AVGeoPoint</a>&#160;</td>
          <td class="paramname"><em>point</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a proximity-based constraint for finding objects with keys whose GeoPoint values are near the given point. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the <a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm" title="AVGeoPoint represents a latitude / longitude point that may be associated with a key in a AVObject or...">AVGeoPoint</a> is stored in.</td></tr>
    <tr><td class="paramname">point</td><td>The reference <a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm" title="AVGeoPoint represents a latitude / longitude point that may be associated with a key in a AVObject or...">AVGeoPoint</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a349efff75b8dae36a7edb899b4f86dab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a349efff75b8dae36a7edb899b4f86dab">&#9670;&nbsp;</a></span>WhereNotContainedIn&lt; TIn &gt;()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereNotContainedIn&lt; TIn &gt; </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; TIn &gt;&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value to be contained in the provided list of values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">values</td><td>The values that will match.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a188396e1b7e92f4920afb2705aaf1fce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a188396e1b7e92f4920afb2705aaf1fce">&#9670;&nbsp;</a></span>WhereNotEqualTo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereNotEqualTo </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's value not to be equal to the provided value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">value</td><td>The value that that must not be equalled.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="af71282d4c800c0ae438e1ebeb94dbb47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af71282d4c800c0ae438e1ebeb94dbb47">&#9670;&nbsp;</a></span>WhereSizeEqualTo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereSizeEqualTo </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint to the query that requires a particular key's size to be equal to the provided size. </p>
<dl class="section return"><dt>Returns</dt><dd>The size equal to.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to check.</td></tr>
    <tr><td class="paramname">size</td><td>The value that the size must be.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="afdb26ba09d6e250968b6529634cc90c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdb26ba09d6e250968b6529634cc90c0">&#9670;&nbsp;</a></span>WhereStartsWith()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereStartsWith </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>suffix</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a constraint for finding string values that start with the provided string. This query will use the backend index, so it will be fast even with large data sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the string to match is stored in.</td></tr>
    <tr><td class="paramname">suffix</td><td>The substring that the value must start with.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a9c4821e1f9303e3e920f8759012f9d84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c4821e1f9303e3e920f8759012f9d84">&#9670;&nbsp;</a></span>WhereWithinDistance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereWithinDistance </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm">AVGeoPoint</a>&#160;</td>
          <td class="paramname"><em>point</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_lean_cloud_1_1_a_v_geo_distance.htm">AVGeoDistance</a>&#160;</td>
          <td class="paramname"><em>maxDistance</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a proximity-based constraint for finding objects with keys whose GeoPoint values are near the given point and within the maximum distance given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key that the <a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm" title="AVGeoPoint represents a latitude / longitude point that may be associated with a key in a AVObject or...">AVGeoPoint</a> is stored in.</td></tr>
    <tr><td class="paramname">point</td><td>The reference <a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm" title="AVGeoPoint represents a latitude / longitude point that may be associated with a key in a AVObject or...">AVGeoPoint</a>.</td></tr>
    <tr><td class="paramname">maxDistance</td><td>The maximum distance (in radians) of results to return.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<a id="a8fba3a28ce0c829f551cc577cc083db0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fba3a28ce0c829f551cc577cc083db0">&#9670;&nbsp;</a></span>WhereWithinGeoBox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual S <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.WhereWithinGeoBox </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm">AVGeoPoint</a>&#160;</td>
          <td class="paramname"><em>southwest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_lean_cloud_1_1_a_v_geo_point.htm">AVGeoPoint</a>&#160;</td>
          <td class="paramname"><em>northeast</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add a constraint to the query that requires a particular key's coordinates to be contained within a given rectangular geographic bounding box. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The key to be constrained.</td></tr>
    <tr><td class="paramname">southwest</td><td>The lower-left inclusive corner of the box.</td></tr>
    <tr><td class="paramname">northeast</td><td>The upper-right inclusive corner of the box.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new query with the additional constraint.</dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa8654b091fc016235fe00d378370cf41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8654b091fc016235fe00d378370cf41">&#9670;&nbsp;</a></span>className</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly string <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.className</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0bccf309fe4bd66f40cf9dd79c4d135b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bccf309fe4bd66f40cf9dd79c4d135b">&#9670;&nbsp;</a></span>includes</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly ReadOnlyCollection&lt;string&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.includes</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5138a4c44c8ff7e7cf2c3d073853412"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5138a4c44c8ff7e7cf2c3d073853412">&#9670;&nbsp;</a></span>limit</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly? int <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.limit</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac965d070af97af19a8b1aecf14fee830"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac965d070af97af19a8b1aecf14fee830">&#9670;&nbsp;</a></span>orderBy</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly ReadOnlyCollection&lt;string&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.orderBy</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a392e9444df1de6eede968af4a34061bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a392e9444df1de6eede968af4a34061bc">&#9670;&nbsp;</a></span>redirectClassNameForKey</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly String <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.redirectClassNameForKey</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aad5aece99d6a99d7fc32f766322bfdd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad5aece99d6a99d7fc32f766322bfdd6">&#9670;&nbsp;</a></span>selectedKeys</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly ReadOnlyCollection&lt;string&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.selectedKeys</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abba751a1824c950b203048f0f9f23a70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abba751a1824c950b203048f0f9f23a70">&#9670;&nbsp;</a></span>skip</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly? int <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.skip</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a34dae50f05dd7122e8f9beb11d68983c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34dae50f05dd7122e8f9beb11d68983c">&#9670;&nbsp;</a></span>where</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly Dictionary&lt;string, object&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.where</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a id="a0821c1fa642b2b08196c15c056ab259b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0821c1fa642b2b08196c15c056ab259b">&#9670;&nbsp;</a></span>Condition</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Dictionary&lt;string, object&gt; <a class="el" href="class_lean_cloud_1_1_a_v_query_pair.htm">LeanCloud.AVQueryPair</a>&lt; S, T &gt;.Condition</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>LeanCloud.Core/Public/<a class="el" href="_i_a_v_query_8cs.htm">IAVQuery.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.15
</small></address>
</body>
</html>
